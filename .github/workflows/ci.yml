name: CI

on:
    push:
        branches:
            - master
    workflow_dispatch:

jobs:
    eslint:
        name: ESLint
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Bun
              uses: oven-sh/setup-bun@v1

            - name: Install dependencies
              run: bun install

            - name: Lint
              run: bun lint

    build-bun:
        name: Build (bun)
        runs-on: ubuntu-latest
        needs: eslint

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Bun
              uses: oven-sh/setup-bun@v1

            - name: Install dependencies
              run: bun install

            - name: Build
              run: bun run build

            - name: Compile
              run: bun run compile

    build-node:
        name: Build (node)
        runs-on: ubuntu-latest
        needs: eslint

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 'lts/iron'

            - name: Install dependencies
              run: npm install

            - name: Build
              run: npm run build

            - name: Build Library
              run: npm run build:lib

    publish:
        needs: [build-bun, build-node]
        runs-on: ubuntu-latest
        permissions:
            contents: write # Publish GitHub Releases & Commit
            issues: write # Comment on issues
            pull-requests: write # Comment on PRs
            id-token: write # OIDC token for npm provenance
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Bun
              uses: oven-sh/setup-bun@v1
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 'lts/iron'

            - name: Import GPG
              uses: crazy-max/ghaction-import-gpg@v6
              with:
                  gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
                  passphrase: ${{ secrets.GPG_PASSPHRASE }}
                  git_user_signingkey: true
                  git_commit_gpgsign: true

            - name: Install dependencies
              run: bun install --frozen-lockfile

            - name: Build project
              run: bun run build:lib

            # Workaround for verifyConditions step of @semantic-release/npm
            - run: cp ../package.json . && rm -rf types/
              working-directory: dist

            - name: Release
              run: bunx semantic-release
              env:
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  GIT_AUTHOR_NAME: ${{ github.actor }}
                  GIT_AUTHOR_EMAIL: ${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com
                  GIT_COMMITTER_NAME: brewcoua-bot
                  GIT_COMMITTER_EMAIL: 151367391+brewcoua-bot@users.noreply.github.com
