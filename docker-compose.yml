services:
    orchestrator:
        build:
            context: .
            dockerfile: ./packages/orchestrator/Dockerfile
        ports:
            - '3000:3000'
        environment:
            - FORCE_COLOR=1
            - LOG_LEVEL=debug
        container_name: orchestrator
        depends_on:
            - rabbitmq
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
            interval: 1m30s
            timeout: 30s
            retries: 5
            start_period: 30s

    rabbitmq:
        image: rabbitmq:3-management
        ports:
            - '5672:5672'
            - '15672:15672'
        environment:
            - RABBITMQ_DEFAULT_USER=guest
            - RABBITMQ_DEFAULT_PASS=guest
        container_name: rabbitmq
        healthcheck:
            test: ['CMD', 'rabbitmqctl', 'status']
            interval: 30s
            timeout: 10s
            retries: 3

    worker:
        build:
            context: .
            dockerfile: ./packages/worker/Dockerfile
        environment:
            - FORCE_COLOR=1
            - LOG_LEVEL=debug
        deploy:
            mode: replicated
            replicas: 2
        depends_on:
            - rabbitmq
            - orchestrator
